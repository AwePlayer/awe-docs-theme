---
import Search from "../SearchDialog";
import NavMenu from "./NavMenu.astro";
import { getCollection } from "astro:content";
const collection = await getCollection("docs");

interface SidebarItem {
  title: string;
  slug: string;
  children: SidebarItem[];
}

function getSlugSegments(slug: string): string[] {
  return slug.split("/").filter(Boolean);
}

function buildSidebar(data: { slug: string }[]): SidebarItem {
  const sidebar: SidebarItem = { title: "", slug: "", children: [] };

  data.forEach((item) => {
    const segments = getSlugSegments(item.slug);
    let currentLevel = sidebar;

    segments.forEach((segment) => {
      let foundChild = currentLevel.children.find(
        (child) => child.title === segment
      );
      if (!foundChild) {
        foundChild = { title: segment, slug: "", children: [] };
        currentLevel.children.push(foundChild);
      }
      currentLevel = foundChild;
    });

    currentLevel.slug = item.slug;
  });

  return sidebar;
}

function convertSidebarToArray(
  sidebar: SidebarItem[],
  parentKey = ""
): SidebarItem[] {
  return sidebar.map((item) => {
    const fullPath = parentKey ? `${parentKey}/${item.title}` : item.title;
    return {
      ...item,
      slug: fullPath,
      children: convertSidebarToArray(item.children, fullPath),
    };
  });
}

const nestedSidebar = buildSidebar(collection);
const sidebarArray = convertSidebarToArray(nestedSidebar.children);
---

<div
  class="w-80 flex flex-col items-center h-[calc(100vh-56px)] border-r border-zinc-900"
>
  <nav class="w-full h-full p-4 space-y-4 flex flex-col justify-between">
    <div class="space-y-4">
      <Search client:load />
      <NavMenu baseUrl="/docs" sidebarArray={sidebarArray} />
    </div>
    <div>
      <ul>
        <li><a href="">Sidebar</a></li>
      </ul>
    </div>
  </nav>
</div>

<style lang="postcss">
  li {
    @apply p-2 text-zinc-400 hover:text-white font-extralight cursor-pointer text-sm flex space-x-2 items-center transition-all ease-in-out;
  }
</style>
